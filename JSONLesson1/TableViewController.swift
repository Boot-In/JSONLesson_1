//
//  TableViewController.swift
//  JSONLesson1
//
//  Created by Olimp Service on 03.08.2022.
//

/// НЕМНОГО ТЕОРИИ:

///  JSON-объект - это неупорядоченное множество "ключ:значение", заключенные в фигурные скобки. Ключ описывается строкой, между ним и значение стоит символ ДВОЕТОЧИЕ. Пары ключ-значение отделяют друг от друга ЗАПЯТОЙ

/// ИСПОЛЬЗОВАНИЕ: Формат JSON в основном используется для упорядоченного хранения данных в процессе их обмена между сервером и клиенской частью приложения

/// ПРИМЕР JSON:

 let inputJSON = """
     {
         "stat": "ok",
         "blogs":
             {
                 "blog":
                     [
                         {
                             "id": 73,
                             "name": "Bloxus test",
                             "needspassword": true,
                             "url": "http://remote.bloxus.com/"
                         },
                         {
                             "id": 74,
                             "name": "Manula Text",
                             "needspassword": false,
                             "url": "http://flickertext1.userland.com/"
                         }
                     ]
             }
     }
 """
 

/// ПРЕИМУЩЕСТВА ИСПОЛЬЗОВАНИЯ:
/// 1. Поголовно распростанен для работы с Интернетов
/// 2. Легко преобразовавается в Struct и обратно
/// 3. В GitHub имеенся популярная библиотека для облегчения работы с JSON файлами (SwifryJSON))



import UIKit

class TableViewController: UITableViewController {
    
    // TODO: - Создаем JSON файл (обратите внимание что его формат - String). Для удобства его лучше писать в многострочном виде
    let inputJSON = """
        {
            "stat": "ok",
            "blogs":
                {
                    "blog":
                        [
                            {
                                "id": 73,
                                "name": "Bloxus test",
                                "needspassword": true,
                                "url": "http://remote.bloxus.com/"
                            },
                            {
                                "id": 74,
                                "name": "Manula Text",
                                "needspassword": false,
                                "url": "http://flickertext1.userland.com/"
                            }
                        ]
                }
        }
    """
    
    // TODO: - Для загрузки данных из свойства inputJSON в таблицу, сначала создаем Struct
    // ВНИМАНИЕ: Структуры ДОЛЖНА ИМЕТЬ ИМЕНА СВОЙСТВ В ТОЧНОСТИ СОВПАДАЮЩИЕ С КЛЮЧАМИ JSON объекта. Кроме того, эта структура должна соответствовать протоколу Codable.
    /// Чтобы кодировать и декодировать пользовательский тип, мы должны сделать его Codable.
    /// Самый простой способ сделать тип codable — это объявить его свойства с использованием типов данных, уже являющихся Codable.
    ///     Встроенные Codable типы:  String, Int, Double, Data, URL, Bool
    ///     Массивы, словари, опционалы являются Codable, если содержат Codable типы
    // Эта структура называется РАЗВЕРНУТОЙ СТРУКТУРОЙ
    struct Stat: Codable {
        let stat: String
        let blogs: Blogs
    }

    struct Blogs: Codable {
        let blog: [Blog]
    }

    struct Blog: Codable {
        let id: Int
        let name: String
        let needspassword: Bool
        let url: URL
    }

    // TODO: - Struct может быть вложенной
    // Создадим Struct во вложенном виде
    // Эта структура называется ВЛОЖЕННОЙ СТРУКТУРОЙ
    /// Обе эти структуры описывают один и тотже JSON, но работа с каждой из этих структур НЕМНОГО ОТЛИЧАЕТСЯ
    struct Stat2: Codable {
        let stat: String
        let blogs: Blogs
        struct Blogs: Codable {
            struct Blog: Codable {
                let id: Int
                let name: String
                let needspassword: Bool
                let url: URL
            }
            let blog: [Blog]
        }
        
    }
    
    // TODO: - Для загрузки данных массива данных с ключем 'blog' - cоздаем свойство dataJSON и dataJSON2
    var dataJSON = [Blog]() // Для развернутой структуры
    var dataJSON2 = [Stat2.Blogs.Blog]() // Для вложенной структуры

    // Здесь все одинаково
    override func viewDidLoad() {
        super.viewDidLoad()

        // Преобразуем свойство dataJSON в формат DATA
        let inputData = inputJSON.data(using: .utf8)!
        // парсим JSON и загружаем в загрузочный массив таблицы
        parse(json: inputData)
        
//        dataJSONAdd()
    }
    
    // Это код для развернутой Struct
    func parse(json: Data)
    {
        // Создаем свойство - Объект, который декодирует экземпляры типа данных из объектов JSON.
        /// JSONDecoder используется для декодирования данных формата JSON в ваш codable тип.
        let decoder = JSONDecoder()
        
        // Преобразование JSON в Struct может вызвать ошибку, поэтому используем try
        // Для преобразования воспользуемся функций объекта JSONDecoder() - функция decode (Возвращает значение типа структура Stat/Stat2, декодированное из объекта json)
        if let jsonPetitions = try? decoder.decode(Stat2.self, from: json) { // Для вложенной структуры
//        if let jsonPetitions = try? decoder.decode(Stat.self, from: json) { // Для развернутой структуры

            // Свойство jsonPetitions после декодирования JSON файла содержит ВСЕ ДАННЫЕ загружаемого файла
            // Вы можете просмотреть результат в консоли используя функцию dump
            dump(jsonPetitions)
            
            // Нам все данные из исходного  JSON файла не нужны, поэтому выберем необходимый нам для заполнениея таблицы массив
            //TODO: - Для развернутой структуры
//            dataJSON = jsonPetitions.blogs.blog
            // Посмотрим, что получилось
//            dump(dataJSON)

            // TODO: - Для вложенной структуры
            dataJSON2 = jsonPetitions.blogs.blog
            // Посмотрим, что получилось
            dump(dataJSON2)

            // И конечно перерисуем таблицу
            tableView.reloadData()
        }
    }

    // TODO: - Теперь загрузим полученные нами данные в таблицу
    // MARK: - Table view data source

    // Определяем количество ячеек в таблицу (здесь оператор return можно опустить, т.к. возвращаемый оператор - одно значение )
    // TODO: - Для вложенной структуры
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int { dataJSON2.count }
    // TODO: - Для развернутой структуры
//    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int { dataJSON.count }

    // Заполним ячейки таблицы
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "Cell", for: indexPath)

        // TODO: - Для вложенной структуры
        cell.textLabel?.text = dataJSON2[indexPath.row].name
        
        // TODO: - Для развернутой структуры
//        cell.textLabel?.text = dataJSON[indexPath.row].name

        return cell
    }

}


// MARK: - Добавляем функцию добавления данных в структуру

extension TableViewController {
    
    func dataJSONAdd()
    {
        // TODO: - Для развернутой структуры
        dataJSON.append(Blog(id: 1, name: "date1", needspassword: true, url: URL(string: "http://remote.bloxus.com")!))
        
        // TODO: - Для вложенной структуры
        dataJSON2.append(Stat2.Blogs.Blog(id: 1, name: "date2", needspassword: true, url: URL(string: "http://remote.bloxus.com")!))
    }
}

// MARK: - Домашнее задание

// Создать JSON для jBible и загрузить в таблицу стихи из (Естественно не надо создавать все стихи/главы/книги/заветы - для меня важно, чтобы ты понял как это делается)

/*
 Синодальный перевод
    Ветхий завет
        бытие
            Глава 1
                стих 1: В начале сотворил Бог небо и землю.
                стих 2: Земля же была безвидна и пуста, и тьма над бездною, и Дух Божий носился над водою.
                стих 3: "И сказал Бог: да будет свет. И стал свет."
                    4 И увидел Бог свет, что он хорош, и отделил Бог свет от тьмы.
                    5 И назвал Бог свет днем, а тьму ночью. И был вечер, и было утро: день один.
                    6 И сказал Бог: да будет твердь посреди воды, и да отделяет она воду от воды. [И стало так.]
                    7 И создал Бог твердь, и отделил воду, которая под твердью, от воды, которая над твердью. И стало так.
                    8 И назвал Бог твердь небом. [И увидел Бог, что _это_ хорошо.] И был вечер, и было утро: день второй.
                    9 И сказал Бог: да соберется вода, которая под небом, в одно место, и да явится суша. И стало так. [И собралась вода под небом в свои места, и явилась суша.]
                    10 И назвал Бог сушу землею, а собрание вод назвал морями. И увидел Бог, что _это_ хорошо.
                    11 И сказал Бог: да произрастит земля зелень, траву, сеющую семя [по роду и по подобию _ее,_ и] дерево плодовитое, приносящее по роду своему плод, в котором семя его на земле. И стало так.
                    12 И произвела земля зелень, траву, сеющую семя по роду [и по подобию] ее, и дерево [плодовитое], приносящее плод, в котором семя его по роду его [на земле]. И увидел Бог, что _это_ хорошо.
                    13 И был вечер, и было утро: день третий.
                    14 И сказал Бог: да будут светила на тверди небесной [для освещения земли и] для отделения дня от ночи, и для знамений, и времен, и дней, и годов;
                    15 и да будут они светильниками на тверди небесной, чтобы светить на землю. И стало так.
                    16 И создал Бог два светила великие: светило большее, для управления днем, и светило меньшее, для управления ночью, и звезды;
                    17 и поставил их Бог на тверди небесной, чтобы светить на землю,
                    18 и управлять днем и ночью, и отделять свет от тьмы. И увидел Бог, что _это_ хорошо.
                    19 И был вечер, и было утро: день четвёртый.
                    20 И сказал Бог: да произведет вода пресмыкающихся, душу живую; и птицы да полетят над землею, по тверди небесной. [И стало так.]
                    21 И сотворил Бог рыб больших и всякую душу животных пресмыкающихся, которых произвела вода, по роду их, и всякую птицу пернатую по роду ее. И увидел Бог, что _это_ хорошо.
                    22 И благословил их Бог, говоря: плодитесь и размножайтесь, и наполняйте воды в морях, и птицы да размножаются на земле.
                    23 И был вечер, и было утро: день пятый.
                    24 И сказал Бог: да произведет земля душу живую по роду ее, скотов, и гадов, и зверей земных по роду их. И стало так.
                    25 И создал Бог зверей земных по роду их, и скот по роду его, и всех гадов земных по роду их. И увидел Бог, что _это_ хорошо.
                    26 И сказал Бог: сотворим человека по образу Нашему [и] по подобию Нашему, и да владычествуют они над рыбами морскими, и над птицами небесными, [и над зверями,] и над скотом, и над всею землею, и над всеми гадами, пресмыкающимися по земле.
                    27 И сотворил Бог человека по образу Своему, по образу Божию сотворил его; мужчину и женщину сотворил их.
                    28 И благословил их Бог, и сказал им Бог: плодитесь и размножайтесь, и наполняйте землю, и обладайте ею, и владычествуйте над рыбами морскими [и над зверями,] и над птицами небесными, [и над всяким скотом, и над всею землею,] и над всяким животным, пресмыкающимся по земле.
                    29 И сказал Бог: вот, Я дал вам всякую траву, сеющую семя, какая есть на всей земле, и всякое дерево, у которого плод древесный, сеющий семя; -- вам _сие_ будет в пищу;
                    30 а всем зверям земным, и всем птицам небесным, и всякому [гаду,] пресмыкающемуся по земле, в котором душа живая, _дал_ Я всю зелень травную в пищу. И стало так.
                    31 И увидел Бог все, что Он создал, и вот, хорошо весьма. И был вечер, и было утро: день шестой.

            Глава 2
                    1 Так совершены небо и земля и все воинство их.
                    2 И совершил Бог к седьмому дню дела Свои, которые Он делал, и почил в день седьмый от всех дел Своих, которые делал.
                    3 И благословил Бог седьмой день, и освятил его, ибо в оный почил от всех дел Своих, которые Бог творил и созидал.
                    4 Вот происхождение неба и земли, при сотворении их, в то время, когда Господь Бог создал землю и небо,
                    5 и всякий полевой кустарник, которого еще не было на земле, и всякую полевую траву, которая еще не росла, ибо Господь Бог не посылал дождя на землю, и не было человека для возделывания земли,
                    6 но пар поднимался с земли и орошал все лице земли.
                    7 И создал Господь Бог человека из праха земного, и вдунул в лице его дыхание жизни, и стал человек душею живою.
                    8 И насадил Господь Бог рай в Едеме на востоке, и поместил там человека, которого создал.
                    9 И произрастил Господь Бог из земли всякое дерево, приятное на вид и хорошее для пищи, и дерево жизни посреди рая, и дерево познания добра и зла.
                    10 Из Едема выходила река для орошения рая; и потом разделялась на четыре реки.
                    11 Имя одной Фисон: она обтекает всю землю Хавила, ту, где золото;
                    12 и золото той земли хорошее; там бдолах и камень оникс.
                    13 Имя второй реки Гихон [Геон]: она обтекает всю землю Куш.
                    14 Имя третьей реки Хиддекель [Тигр]: она протекает пред Ассириею. Четвертая река Евфрат.
                    15 И взял Господь Бог человека, [которого создал,] и поселил его в саду Едемском, чтобы возделывать его и хранить его.
                    16 И заповедал Господь Бог человеку, говоря: от всякого дерева в саду ты будешь есть,
                    17 а от дерева познания добра и зла не ешь от него, ибо в день, в который ты вкусишь от него, смертью умрешь.
                    18 И сказал Господь Бог: не хорошо быть человеку одному; сотворим ему помощника, соответственного ему.
                    19 Господь Бог образовал из земли всех животных полевых и всех птиц небесных, и привел [их] к человеку, чтобы видеть, как он назовет их, и чтобы, как наречет человек всякую душу живую, так и было имя ей.
                    20 И нарек человек имена всем скотам и птицам небесным и всем зверям полевым; но для человека не нашлось помощника, подобного ему.
                    21 И навел Господь Бог на человека крепкий сон; и, когда он уснул, взял одно из ребр его, и закрыл то место плотию.
                    22 И создал Господь Бог из ребра, взятого у человека, жену, и привел ее к человеку.
                    23 И сказал человек: вот, это кость от костей моих и плоть от плоти моей; она будет называться женою, ибо взята от мужа [своего].
                    24 Потому оставит человек отца своего и мать свою и прилепится к жене своей; и будут [два] одна плоть.
                    25 И были оба наги, Адам и жена его, и не стыдились.


            ...
        Исход
        Левит
        Числа
        Второзаконие
        Иисус Навин
        Судьи
        Руфь
        1-я Царств
        2-я Царств
        3-я Царств
        4-я Царств
        ...
    Новый завет
 
    
 
 
 Новый русский перевод
    ...
 Новый завет. Перевод РБЦ
    ...
 
 
 */

// MARK: - Для обсуждения

// Будем ли продолжать дальше изучать JSON? Можно проработать следующие темы
// 1. Обратное преобразование JSON (из Struct в JSON)
// 2. Расмотреть возможность несоответствия свойств Struct и полей JSON
// 3. Добавление даты в JSON (Date не соответсвует протоколу Codable)
// 4. Добавление в JSON массивов и словарей
// 5. Реализация пользовательского инициализатора init (from decoder: Decoder)
// или
// Перейдем к изучению библиотеки SwiftyJSON (с установкой я думая ты разберешься по моему видео на ЮТУБЕ)
// или
// Ты задаешь интересующую тебя тему
